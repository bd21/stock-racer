{"ast":null,"code":"var _jsxFileName = \"/Users/joel/src/stock-racer/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [stockData, setStockData] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchStockData = async () => {\n      const api_key = \"Z6FXLNSBB1I5WSHR\";\n      const urlParams = new URLSearchParams(window.location.search);\n      const start_date = urlParams.get('start_date') || '2023-01-01';\n      const stock1 = urlParams.get('stock1') || 'AAPL';\n      const stock2 = urlParams.get('stock2') || 'GOOGL';\n      try {\n        const [data1, data2] = await Promise.all([fetchStockTimeSeries(stock1, api_key), fetchStockTimeSeries(stock2, api_key)]);\n        const processedData = processStockData(data1, data2, start_date);\n        setStockData(processedData);\n      } catch (err) {\n        setError('Error fetching stock data. Please try again later.');\n        console.error(err);\n      }\n    };\n    fetchStockData();\n  }, []);\n  const options = {\n    responsive: true,\n    interaction: {\n      mode: 'index',\n      intersect: false\n    },\n    stacked: false,\n    plugins: {\n      title: {\n        display: true,\n        text: 'AAPL vs GOOGL Stock Prices'\n      }\n    },\n    scales: {\n      y: {\n        type: 'linear',\n        display: true,\n        position: 'left',\n        title: {\n          display: true,\n          text: 'AAPL Price ($)'\n        }\n      },\n      y1: {\n        type: 'linear',\n        display: true,\n        position: 'right',\n        title: {\n          display: true,\n          text: 'GOOGL Price ($)'\n        },\n        grid: {\n          drawOnChartArea: false\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Price Comparison\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : stockData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '80%',\n        margin: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: stockData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QZc8taBkQI+Zm7CA3D8VjZFYSvM=\");\n_c = App;\nasync function fetchStockTimeSeries(symbol, apiKey) {\n  const url = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&outputsize=full&apikey=${apiKey}`;\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n  return await response.json();\n}\nfunction processStockData(data1, data2, startDate) {\n  const timeSeries1 = data1['Time Series (Daily)'];\n  const timeSeries2 = data2['Time Series (Daily)'];\n  const labels = [];\n  const values1 = [];\n  const values2 = [];\n  Object.entries(timeSeries1).forEach(([date, values]) => {\n    if (date >= startDate) {\n      labels.unshift(date);\n      values1.unshift(parseFloat(values['4. close']));\n    }\n  });\n  Object.entries(timeSeries2).forEach(([date, values]) => {\n    if (date >= startDate) {\n      values2.unshift(parseFloat(values['4. close']));\n    }\n  });\n  return {\n    labels,\n    datasets: [{\n      label: data1['Meta Data']['2. Symbol'],\n      data: values1,\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1,\n      yAxisID: 'y'\n    }, {\n      label: data2['Meta Data']['2. Symbol'],\n      data: values2,\n      borderColor: 'rgb(255, 99, 132)',\n      tension: 0.1,\n      yAxisID: 'y1'\n    }]\n  };\n}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","App","_s","stockData","setStockData","error","setError","fetchStockData","api_key","urlParams","URLSearchParams","window","location","search","start_date","get","stock1","stock2","data1","data2","Promise","all","fetchStockTimeSeries","processedData","processStockData","err","console","options","responsive","interaction","mode","intersect","stacked","plugins","title","display","text","scales","y","type","position","y1","grid","drawOnChartArea","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","margin","data","_c","symbol","apiKey","url","response","fetch","ok","Error","status","json","startDate","timeSeries1","timeSeries2","labels","values1","values2","Object","entries","forEach","date","values","unshift","parseFloat","datasets","label","borderColor","tension","yAxisID","$RefreshReg$"],"sources":["/Users/joel/src/stock-racer/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction App() {\n  const [stockData, setStockData] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchStockData = async () => {\n      const api_key = \"Z6FXLNSBB1I5WSHR\";\n      const urlParams = new URLSearchParams(window.location.search);\n      const start_date = urlParams.get('start_date') || '2023-01-01';\n      const stock1 = urlParams.get('stock1') || 'AAPL';\n      const stock2 = urlParams.get('stock2') || 'GOOGL';\n\n      try {\n        const [data1, data2] = await Promise.all([\n          fetchStockTimeSeries(stock1, api_key),\n          fetchStockTimeSeries(stock2, api_key)\n        ]);\n\n        const processedData = processStockData(data1, data2, start_date);\n        setStockData(processedData);\n      } catch (err) {\n        setError('Error fetching stock data. Please try again later.');\n        console.error(err);\n      }\n    };\n\n    fetchStockData();\n  }, []);\n\n  const options = {\n    responsive: true,\n    interaction: {\n      mode: 'index',\n      intersect: false,\n    },\n    stacked: false,\n    plugins: {\n      title: {\n        display: true,\n        text: 'AAPL vs GOOGL Stock Prices',\n      },\n    },\n    scales: {\n      y: {\n        type: 'linear',\n        display: true,\n        position: 'left',\n        title: {\n          display: true,\n          text: 'AAPL Price ($)',\n        },\n      },\n      y1: {\n        type: 'linear',\n        display: true,\n        position: 'right',\n        title: {\n          display: true,\n          text: 'GOOGL Price ($)',\n        },\n        grid: {\n          drawOnChartArea: false,\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Stock Price Comparison</h1>\n      {error ? (\n        <p>{error}</p>\n      ) : stockData ? (\n        <div style={{ width: '80%', margin: 'auto' }}>\n          <Line data={stockData} options={options} />\n        </div>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n}\n\nasync function fetchStockTimeSeries(symbol, apiKey) {\n  const url = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&outputsize=full&apikey=${apiKey}`;\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n  return await response.json();\n}\n\nfunction processStockData(data1, data2, startDate) {\n  const timeSeries1 = data1['Time Series (Daily)'];\n  const timeSeries2 = data2['Time Series (Daily)'];\n\n  const labels = [];\n  const values1 = [];\n  const values2 = [];\n\n  Object.entries(timeSeries1).forEach(([date, values]) => {\n    if (date >= startDate) {\n      labels.unshift(date);\n      values1.unshift(parseFloat(values['4. close']));\n    }\n  });\n\n  Object.entries(timeSeries2).forEach(([date, values]) => {\n    if (date >= startDate) {\n      values2.unshift(parseFloat(values['4. close']));\n    }\n  });\n\n  return {\n    labels,\n    datasets: [\n      {\n        label: data1['Meta Data']['2. Symbol'],\n        data: values1,\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1,\n        yAxisID: 'y',\n      },\n      {\n        label: data2['Meta Data']['2. Symbol'],\n        data: values2,\n        borderColor: 'rgb(255, 99, 132)',\n        tension: 0.1,\n        yAxisID: 'y1',\n      }\n    ]\n  };\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}